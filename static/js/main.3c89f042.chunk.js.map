{"version":3,"sources":["components/NotFound.tsx","components/Layout.tsx","clients/MarkdownClient.ts","components/MarkdownRendrer.tsx","containers/MarkdownViewer.tsx","hooks/useMarkdown.ts","index.tsx"],"names":["NotFound","location","useLocation","pathname","Layout","children","className","MarkdownClient","config","this","basePath","fileSuffix","path","fullPath","getDocument","res","error","status","retryWithNewPath","newPath","endsWith","substr","length","filePath","getMarkdownName","axios","get","content","data","message","response","MarkdownRendrer","html","marked","dangerouslySetInnerHTML","__html","MarkdownViewer","markdown","useState","setData","useEffect","a","client","getDocumentForPath","success","undefined","useMarkdown","ReactDOM","render","StrictMode","exact","component","document","getElementById"],"mappings":"wNAGaA,EAAe,WAC1B,IAAIC,EAAWC,cAEf,OACE,8BACE,+CACe,+BAAOD,EAASE,iBCPxBC,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACE,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,+BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,uBAAhB,qCAGJ,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QACf,qBAAKA,UAAU,2BAAf,SAA2CD,IAC3C,qBAAKC,UAAU,e,iECEVC,EAAb,WAEE,WAAYC,GAAgC,yBADpCA,YACmC,EACzCC,KAAKD,OAAL,OAAcA,QAAd,IAAcA,IAAU,CACtBE,SAAU,QACVC,WAAY,OALlB,6FAQE,WAAgCC,GAAhC,kFACQC,EADR,UACsBJ,KAAKD,OAAOE,UADlC,OAC6CE,GAD7C,SAEoBH,KAAKK,YAAYD,GAFrC,UAEQE,EAFR,OAG4B,OAAtB,UAAAA,EAAIC,aAAJ,eAAWC,QAHjB,gCAIiBR,KAAKS,iBAAiBL,GAJvC,wEAOSE,GAPT,gDARF,qFAkBE,SAAyBH,GACvB,IAAMO,EAAUP,EAAKQ,SAAS,KAC1BR,EAAKS,OAAO,EAAGT,EAAKU,OAAS,GADjB,UAETV,EAFS,KAIhB,OAAOH,KAAKK,YAAYK,KAvB5B,gEA0BE,WAA0BP,GAA1B,6FAEUW,EAAWd,KAAKe,gBAAgBZ,GAF1C,SAGsBa,IAAMC,IAAYH,GAHxC,cAGUR,EAHV,yBAIW,CACLY,QAASZ,EAAIa,OALnB,uCAQUZ,EARV,uBASW,CACLA,MAAO,CACLa,QAASb,EAAMa,QACfZ,OAAM,UAAED,EAAMc,gBAAR,aAAE,EAAgBb,UAZhC,yDA1BF,oFA4CE,SAAwBL,GACtB,OAAIA,EAAKQ,SAAS,KACV,GAAN,OAAUR,EAAV,gBAAsBH,KAAKD,OAAOG,YAE5B,GAAN,OAAUC,GAAV,OAAiBH,KAAKD,OAAOG,gBAhDnC,K,qBCRaoB,EAA6B,SAAC,GAAiB,IAAfJ,EAAc,EAAdA,QAC3C,IAAKA,EACH,OAAO,KAGT,IAAMK,EAAOC,IAAON,GAEpB,OAAO,qBAAKO,wBAAyB,CAAEC,OAAQH,MCNpCI,EAAqB,WAAO,IAAD,MAChCC,ECAD,WACL,MAAwBC,qBAAxB,mBAAOV,EAAP,KAAaW,EAAb,KACMtC,EAAWC,cAUjB,OARAsC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,6DACOC,EAAS,IAAInC,EADpB,SAEoBmC,EAAOC,mBAAmB1C,EAASE,UAFvD,OAEOyB,EAFP,OAGCW,EAAQX,GAHT,0CAAD,KAKC,CAAC3B,EAASE,WAEN,CACLyC,aAAyBC,KAAZ,OAAJjB,QAAI,IAAJA,OAAA,EAAAA,EAAMZ,OACfW,QAAO,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAMD,QACfX,MAAK,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAMZ,ODfE8B,GAEjB,OAAIT,EAASO,QACJ,cAAC,EAAD,CAAiBjB,QAASU,EAASV,UANvB,OASjB,UAAAU,EAASrB,aAAT,eAAgBC,QACX,cAAC,EAAD,IAGF,iDAAKoB,EAASrB,aAAd,aAAK,EAAgBa,eAArB,QAAgC,0B,YEVzCkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAO,EAAMtC,KAAK,IAAIuC,UAAWf,IACxC,cAAC,IAAD,CAAOxB,KAAK,SAASuC,UAAWf,IAChC,cAAC,IAAD,CAAOxB,KAAK,IAAZ,SACE,cAAC,EAAD,eAMVwC,SAASC,eAAe,W","file":"static/js/main.3c89f042.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const NotFound: FC = () => {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n};\n","import { FC } from 'react';\n\nexport const Layout: FC = ({ children }) => {\n  return (\n    <div className=\"container-fluid\">\n      <nav className=\"navbar navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <span className=\"navbar-brand mb-0 h1\">stromland.github.io</span>\n        </div>\n      </nav>\n      <div className=\"row\">\n        <div className=\"col\"></div>\n        <div className=\"col-6 px-5 py-3 bg-light\">{children}</div>\n        <div className=\"col\"></div>\n      </div>\n    </div>\n  );\n};\n","import axios, { AxiosError } from 'axios';\n\nexport interface MarkdownResponse {\n  content?: string;\n  error?: {\n    message: string;\n    status?: number;\n  };\n}\n\nexport interface MarkdownClientConfig {\n  basePath: string;\n  fileSuffix: string;\n}\n\nexport class MarkdownClient {\n  private config: MarkdownClientConfig;\n  constructor(config?: MarkdownClientConfig) {\n    this.config = config ?? {\n      basePath: '/docs',\n      fileSuffix: '.md',\n    };\n  }\n  public async getDocumentForPath(path: string): Promise<MarkdownResponse> {\n    const fullPath = `${this.config.basePath}${path}`;\n    const res = await this.getDocument(fullPath);\n    if (res.error?.status === 404) {\n      return await this.retryWithNewPath(fullPath);\n    }\n\n    return res;\n  }\n\n  private retryWithNewPath(path: string) {\n    const newPath = path.endsWith('/')\n      ? path.substr(0, path.length - 2)\n      : `${path}/`;\n\n    return this.getDocument(newPath);\n  }\n\n  private async getDocument(path: string): Promise<MarkdownResponse> {\n    try {\n      const filePath = this.getMarkdownName(path);\n      const res = await axios.get<string>(filePath);\n      return {\n        content: res.data,\n      };\n    } catch (e) {\n      const error = e as AxiosError;\n      return {\n        error: {\n          message: error.message,\n          status: error.response?.status,\n        },\n      };\n    }\n  }\n\n  private getMarkdownName(path: string): string {\n    if (path.endsWith('/')) {\n      return `${path}index${this.config.fileSuffix}`;\n    } else {\n      return `${path}${this.config.fileSuffix}`;\n    }\n  }\n}\n","import { FC } from 'react';\nimport marked from 'marked';\n\ntype Props = {\n  content?: string;\n};\n\nexport const MarkdownRendrer: FC<Props> = ({ content }) => {\n  if (!content) {\n    return null;\n  }\n\n  const html = marked(content);\n\n  return <div dangerouslySetInnerHTML={{ __html: html }} />;\n};\n","import { FC } from 'react';\n\nimport { useMarkdown } from '../hooks/useMarkdown';\nimport { MarkdownRendrer } from '../components/MarkdownRendrer';\nimport { NotFound } from '../components/NotFound';\n\nconst HTTP_NOT_FOUND = 404;\n\nexport const MarkdownViewer: FC = () => {\n  const markdown = useMarkdown();\n\n  if (markdown.success) {\n    return <MarkdownRendrer content={markdown.content} />;\n  }\n\n  if (markdown.error?.status === HTTP_NOT_FOUND) {\n    return <NotFound />;\n  }\n\n  return <h1>{markdown.error?.message ?? 'Something went wrong'}</h1>;\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { MarkdownClient, MarkdownResponse } from '../clients/MarkdownClient';\n\ntype MarkdownState = MarkdownResponse & {\n  success: boolean;\n};\n\nexport function useMarkdown(): MarkdownState {\n  const [data, setData] = useState<MarkdownResponse>();\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      const client = new MarkdownClient();\n      const data = await client.getDocumentForPath(location.pathname);\n      setData(data);\n    })();\n  }, [location.pathname]);\n\n  return {\n    success: data?.error === undefined,\n    content: data?.content,\n    error: data?.error,\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { NotFound } from './components/NotFound';\nimport { Layout } from './components/Layout';\nimport { MarkdownViewer } from './containers/MarkdownViewer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact={true} path=\"/\" component={MarkdownViewer} />\n          <Route path=\"/about\" component={MarkdownViewer} />\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}